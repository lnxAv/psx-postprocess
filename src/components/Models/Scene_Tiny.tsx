/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/Scene_Tiny.glb --transform --types 
Files: ./public/Scene_Tiny.glb [948.81KB] > C:\Users\Work\Desktop\psx-postprocess\Scene_Tiny-transformed.glb [53.82KB] (94%)
*/

import * as THREE from 'three'
import React, { useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Transparent: THREE.Mesh
    Standard: THREE.Mesh
  }
  materials: {}
}

export function House_Min(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/Scene_Tiny-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Transparent.geometry} material={nodes.Transparent.material} rotation={[Math.PI / 2, 0, 0]} scale={0.01} >
        {nodes.Transparent.material instanceof THREE.MeshStandardMaterial && (
          <meshStandardMaterial map={nodes.Transparent.material.map} side={THREE.DoubleSide} />
        )}
      </mesh>
      <mesh geometry={nodes.Standard.geometry} material={nodes.Standard.material} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
    </group>
  )
}

useGLTF.preload('/Scene_Tiny-transformed.glb')
